#! /bin/bash

# Get the volume and check if muted or not (STATE):
VOLUME=$(amixer -D pulse sget Master      | \
         egrep -o -m 1 "[0-9]+%" | \
         egrep -o "[0-9]+")
STATE=`amixer -D pulse sget Master          | \
       egrep -m 1 'Playback.*?\[o' | \
       egrep -o '\[o.+\]'`

MATCH_STRING=string:x-canonical-private-synchronous:brightness

# Have a different symbol for varying volume levels:
if [[ $STATE != '[off]' ]]; then
	if [ $VOLUME == "0" ]; then
		notify-send "Volume: ${VOLUME}%" -t 1000 -i ~/code/dotfiles/i3/icons/vol-mute.png -h $MATCH_STRING
	elif [ $VOLUME -lt "33" ] && [ $VOLUME -gt "0" ]; then
		notify-send "Volume: ${VOLUME}%" -t 1000 -i ~/code/dotfiles/i3/icons/vol-low.png -h $MATCH_STRING
	elif [ $VOLUME -lt "67" ] && [ $VOLUME -ge "33" ]; then
		notify-send "Volume: ${VOLUME}%" -t 1000 -i ~/code/dotfiles/i3/icons/vol-med.png -h $MATCH_STRING
	else
		notify-send "Volume: ${VOLUME}%" -t 1000 -i ~/code/dotfiles/i3/icons/vol-high.png -h $MATCH_STRING
	fi
# If volume is muted, display the mute sybol:
else
	notify-send "Mute" -t 1000  -i ~/code/dotfiles/i3/icons/vol-mute.png -h $MATCH_STRING
fi
